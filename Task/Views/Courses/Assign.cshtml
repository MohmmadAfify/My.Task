@model CourseInstructorVM
@{
    ViewBag.Title = "Assign Course";
}

<h2>Assign Course To Instructor</h2>

@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        <div class="form-group">
            <label class = "col-md-2"> Course Name</label>
            <div>
                @Html.EditorFor(a => a.CourseName, 
                                new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(a => a.CourseName, "", 
                                new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <label class = "col-md-2"> Instructor Name</label>
            <div>
                <p>

                @* the dropdownlist items
                    - it receive in the first parameters a lambda expression in all overloads
                    - the second parm is new selectlist which has (
                        the selectitem variable in view model or any list date
                        , string selectedvalue -- write vlaue
                        , string selectedtext -- write text
                        )
                    -the third parm is htmlobject
                *@
                </p>
                @Html.DropDownListFor(i=>i.Instructor.Id,
                                    new SelectList(Model.Instructors.ToList(),
                                    "Value", "Text")
                                    , htmlAttributes: new { @class = "form-control" })
                @* try to send instructor name also *@
                @Html.HiddenFor(i => i.InstructorCourse.Fk_CourseID)
                @Html.HiddenFor(i => i.InstructorCourse.Fk_InstructorId)
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Assign" class="btn btn-success btn-sm" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", "Index",
                    new { @class = "btn btn-default btn-sm" })
</div>

